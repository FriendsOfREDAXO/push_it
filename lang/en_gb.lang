# PushIt - English translations

# General
push_it_title = PushIt - Web Push Notifications
push_it_description = Web Push Notifications for Frontend and Backend

# Page titles
push_it_settings = Settings
push_it_subscriptions = Subscriptions
push_it_send = Send  
push_it_history = History
push_it_backend_notify = Backend Notifications
push_it_help = Help

# Settings page
settings_saved = Settings have been saved.
settings_save_error = Error saving settings.
no_permission_settings = No permission for this page.
vapid_keys_info = Please generate VAPID keys first to use push notifications.
backend_token_warning = Backend notifications are enabled, but no backend token has been generated yet. Click "Regenerate" to create a secure token.

# Form labels and help texts
subject_label = Subject (mailto: or URL)
subject_help = Required for VAPID. Use a mailto: address or a URL of your domain.
vapid_public_key_label = VAPID Public Key
vapid_private_key_label = VAPID Private Key
vapid_private_key_help = ‚ö†Ô∏è Private key - never make publicly accessible!
webpush_library_warning = ‚ö†Ô∏è WebPush library not available. Please run "composer install" in the addon directory.
generate_button = Generate
regenerate_button = Regenerate

# Backend token section
backend_token_label = Backend Token
backend_token_help = Secure token for authenticating backend subscriptions. Automatically transferred to backend JavaScript.
token_present = Token present
no_token_generated = No token generated
backend_token_warning_text = ‚ö†Ô∏è Important note: Regenerating the backend token will invalidate all existing backend subscriptions. All backend users must re-subscribe for push notifications after the token change.
backend_token_confirm = {action} backend token?
backend_token_confirm_warning = ‚ö†Ô∏è WARNING: All backend users must re-subscribe for push notifications after the token change!
backend_token_generated = Backend token has been successfully generated.
backend_token_regenerated = Backend token has been regenerated. {count} existing backend subscriptions have been deactivated.
backend_token_regenerated_simple = Backend token has been regenerated.
backend_token_generate_error = Error generating backend token: {error}

# Feature toggles
backend_notifications_enable = Enable backend notifications
backend_notifications_help = Enables push notifications for REDAXO backend users.
frontend_notifications_enable = Enable frontend notifications
frontend_notifications_help = Enables push notifications for website visitors.
admin_notifications_enable = Automatic admin notifications
admin_notifications_help = Automatically sends notifications for system events (errors, updates, etc.).

# Send page
no_permission_send = You do not have permission for this area.
admin_images_only = Images can only be sent by administrators. Message was sent without images.
send_notification_title = Send Push Notification
current_subscribers_title = Current Subscribers
preview_title = Preview
notification_preview = üì± Notification Preview

# Send form
title_label = Title
title_required = Title *
body_label = Message
body_required = Message *
url_label = Link URL
url_help = Optional: URL to open when clicking on the notification
user_type_label = Target Group
user_type_frontend = Frontend Users
user_type_backend = Backend Users
topics_label = Topics
topics_help = Comma-separated list of topics for targeted notifications (optional)

# Advanced options
advanced_options = Advanced Options
admin_only = (administrators only)
icon_url_label = Icon URL
icon_url_help = URL to notification icon (192x192px recommended)
badge_url_label = Badge URL
badge_url_help = URL to badge (72x72px, monochrome recommended)
hero_image_url_label = Hero Image URL
hero_image_url_help = URL to large image in notification

# Buttons
send_notification_button = Send Notification
reset_form_button = Reset Form
test_functions = Test Functions
test_functions_help = You can test push notifications for yourself:
test_subscription_button = Create Test Subscription

# Subscriptions page
no_permission_delete = No permission to delete subscriptions.
subscription_deleted = Subscription has been deleted.
subscription_delete_error = Error deleting subscription.
backend_subscriptions_repaired = {count} backend subscriptions have been linked to your user ID.
no_backend_subscriptions_found = No backend subscriptions without user ID found.
no_subscriptions = No push subscriptions available yet.

# Status and configuration
status_title = Status
frontend_integration_title = Frontend Integration
backend_integration_title = Backend Integration
topic_security_title = Topic Security

# Backend integration info
backend_info_active = Backend notifications are enabled. Backend users will be automatically asked if they want to receive notifications.
backend_info_auto_load = Backend JavaScript is automatically loaded and a notification button is added to the navigation.
backend_token_active_title = Backend Token Active
backend_token_active_info = Backend subscriptions are authenticated via the configured token.
no_backend_token_title = No Backend Token
no_backend_token_info = Please generate a backend token for secure backend subscriptions.

# Frontend integration
frontend_integration_info = Add this code to your frontend template:

# VAPID generation messages
vapid_keys_generated = VAPID keys have been successfully generated.
vapid_keys_regenerated = VAPID keys have been regenerated. Old subscriptions are invalid.
vapid_generate_error = Error generating VAPID keys: {error}

# Action buttons
save_button = Save
save_settings_button = Save Settings

# Missing keys for replacements
backend_token_confirm_generate = generate
backend_token_confirm_regenerate = regenerate

# Keys with placeholders that need proper parsing
backend_token_regenerated = Backend token has been regenerated. {count} existing backend subscriptions have been deactivated.
backend_subscriptions_repaired = {count} backend subscriptions have been linked to your user ID.
vapid_generate_error = Error generating VAPID keys: {error}
backend_token_generate_error = Error generating backend token: {error}
backend_token_confirm = {action} backend token?